{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/FilterContacts/FilterContacts.module.css","Components/Container/Container.module.css","Components/Container/Container.js","redux/contacts/contacts-actions.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/FilterContacts/FilterContacts.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","styles","container","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","state","handleSubmit","e","preventDefault","items","props","contacts","setState","find","item","alert","onSubmit","handleChangeName","currentTarget","value","handleChangeNumber","form","this","field","input","type","pattern","title","required","onChange","button","Component","connect","dispatch","contactsActions","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","onDeleteContact","list","map","onClick","target","label","App","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","rootReducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.daaaa7ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__QzIOS\",\"list\":\"ContactList_list__OPLH6\",\"button\":\"ContactList_button__1VnM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterContacts_label__3r-_l\",\"input\":\"FilterContacts_input__-DWf4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__iri6u\"};","import React from 'react';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => <div className={styles.container}>{children}</div>;\n\nexport default Container;","// Redux\r\n// import types from './contacts-types';\r\n// import shortid from 'shortid';\r\n\r\n// const addContact = (name, number) => ({\r\n//     type: types.ADD,\r\n//     payload: {\r\n//         id: shortid.generate(),\r\n//         name,\r\n//         number,\r\n//     }\r\n// });\r\n\r\n// const deleteContact = contactId => ({\r\n//     type: types.DELETE,\r\n//     payload: contactId,\r\n// });\r\n\r\n// const changeFilter = value => ({\r\n//     type: types.CHANGE_FILTER,\r\n//     payload: value,\r\n// })\r\n\r\n// Redux Toolkit\r\nimport shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => {\r\n    return {\r\n        payload: {\r\n            id: shortid.generate(),\r\n            name,\r\n            number,\r\n        }\r\n    }\r\n});\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, deleteContact, changeFilter };","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: ''\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const { name, number } = this.state;\n        const { items } = this.props.contacts;\n        this.setState({ name: '', number: '' });\n        \n        if (items.find(item => item.name === name)) {\n            alert(`${name} is already in contacts.`);\n            return;\n        };\n\n        this.props.onSubmit(name, number);\n    }\n\n    handleChangeName = e => {\n        this.setState({ name: e.currentTarget.value });\n    };\n\n    handleChangeNumber = e => {\n        this.setState({ number: e.currentTarget.value });\n    };\n\n    render () {\n        return (\n            <form className={styles.form} onSubmit={this.handleSubmit}>\n                <label className={styles.field}>\n                    Name\n                </label>\n                <input\n                    className={styles.input}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    value={this.state.name}\n                    onChange={this.handleChangeName}\n                />\n                <label className={styles.field}>\n                    Number\n                </label>\n                <input\n                    className={styles.input}\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    value={this.state.number}\n                    onChange={this.handleChangeNumber}\n                />\n                <button className={styles.button} type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        )\n    };\n};\n\nconst mapStateToProps = ({contacts}) => ({\n    contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (name, number) => dispatch(contactsActions.addContact(name, number))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport styles from './ContactList.module.css'\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n    return (\n        <ul className={styles.list}>\n            {\n                contacts.map(({ id, name, number }) =>\n                    <li className={styles.item} key={id}>{name}: {number}\n                        <button className={styles.button} type='button' onClick={() => onDeleteContact(id)}>Delete</button>\n                    </li>\n                )\n            }\n        </ul>\n    )\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allContacts.filter(({name}) =>\n        name.toLowerCase().includes(normalizedFilter));\n}\n\nconst mapStateToProps = ({ contacts: { items, filter }}) => ({\n    contacts: getVisibleContacts(items, filter)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onDeleteContact: id => dispatch(contactsActions.deleteContact(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport styles from './FilterContacts.module.css'\n\nconst FilterContacts = ({ value, onChange }) => (\n  <label className={styles.label}>\n    Find contacts by name\n    <input className={styles.input} type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nconst mapStateToProps = (state) => ({\n    value: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChange: e => dispatch(contactsActions.changeFilter(e.target.value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContacts);","import React, { Component } from 'react';\nimport Container from \"./Components/Container\";\nimport ContactForm from './Components/ContactForm';\nimport ContactList from './Components/ContactList';\nimport FilterContacts from './Components/FilterContacts';\nimport \"./App.css\"\n\nclass App extends Component {\n    render() {\n        return (\n            <Container>\n                <h1>Phonebook</h1>\n                <ContactForm />\n                <h2>Contacts</h2>\n                <FilterContacts />\n                <ContactList />\n            </Container>\n        )\n    };\n};\n\nexport default App;","// Redux\r\n// import { combineReducers } from \"redux\";\r\n// import types from './contacts-types';\r\n\r\n// const defaultContacts =\r\n//     [\r\n//         { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//         { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//         { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//         { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }\r\n//     ];\r\n\r\n// const items = (state = defaultContacts, { type, payload }) => {\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             return [...state, payload];\r\n\r\n//         case types.DELETE:\r\n//             return state.filter(({ id }) => id !== payload)\r\n        \r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//         switch (type) {\r\n//         case types.CHANGE_FILTER:\r\n//             return payload;\r\n        \r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n// Redux Toolkit\r\nimport { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst defaultContacts =\r\n    [\r\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }\r\n    ];\r\n\r\nconst items = createReducer(defaultContacts, {\r\n    [actions.addContact]: (state, { payload }) => [...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});","// Redux\r\n// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// import contactsReducer from './contacts/contacts-reducer';\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// Redux Toolkit\r\nimport { configureStore, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n});\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1R6QE\",\"field\":\"ContactForm_field__hjrMx\",\"input\":\"ContactForm_input__1b7DB\",\"button\":\"ContactForm_button__2_beU\"};"],"sourceRoot":""}